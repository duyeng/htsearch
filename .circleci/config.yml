version: 2.1

orbs:
  ruby: circleci/ruby@2.1.0
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build_and_test:
    docker:
      - image: cimg/base:stable
        environment:
          RAILS_ENV: test
          DATABASE_URL: mysql2://root:@127.0.0.1:3306/hotel_search_test
      - image: mysql:8
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_DATABASE: hotel_search_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      - checkout
      - ruby/install:
          version: '3.1.2'
      - ruby/install-deps
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: Set up db
          command: bundle exec rails db:migrate
      - run:
          name: Run test
          command: bundle exec rails test

  deploy_production:
    docker:
      - image: cimg/python:3.10.7
    steps:
      - checkout
      - run:
          name: Install awscli
          command: curl --silent "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: Install and configure kubectl
          command: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && kubectl version --client
      - run:
          name: Install and configure kubectl aws-iam-authenticator
          command: curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64 && chmod +x ./aws-iam-authenticator && mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
      - run:
          name: Deploy production
          command: "./deploy.sh prod"

workflows:
  build_and_push_image:
    jobs:
      #- build_and_test
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only: main
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-cli-version: latest
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          public-registry: false
          push-image: true
          region: "${AWS_REGION}"
          registry-id: AWS_ECR_REGISTRY_ID
          repo: "${AWS_ECR_REPO_NAME}"
          tag: latest
          #requires:
          #  - build_and_test
      - deploy_production:
          filters:
            branches:
              only: main
          requires:
            - aws-ecr/build-and-push-image

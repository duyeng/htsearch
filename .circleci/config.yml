version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1

jobs:
  build_and_test:
    executor: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - hix-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - hix-
            - configure_bundler
      - run:
          name: Install bundle
          command: bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: Setup DB
          command: RAILS_ENV=test bundle exec rails db:create db:schema:load --trace
      - run:
          name: Rails test
          command: |
            bundle exec rails test
      - store_artifacts:
          path: coverage
      - save_cache:
          key: hix-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/
          paths:
            - ./hix

  install_k8s:
    docker:
      - image: cimg/python:3.10.7
    steps:
      - checkout
      - run:
          name: Install awscli
          command: curl --silent "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install
      - run:
          name: Install eksctl
          command: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp && sudo mv /tmp/eksctl /usr/local/bin
      - run:
          name: Install and configure kubectl
          command: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && kubectl version --client
      - run:
          name: Install and configure kubectl aws-iam-authenticator
          command: curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.5.9/aws-iam-authenticator_0.5.9_linux_amd64 && chmod +x ./aws-iam-authenticator && mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
      - run:
          name: "docker login"
          command: |
            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin "${AWS_ECR_REGISTRY_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - run:
          name: "cluster configs"
          command: |
            eksctl utils write-kubeconfig --cluster=${AWS_EKS_CLUSTER_NAME} --region=${AWS_REGION}

workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only: main
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-cli-version: latest
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          public-registry: false
          push-image: true
          region: "${AWS_REGION}"
          registry-id: AWS_ECR_REGISTRY_ID
          repo: "${AWS_ECR_REPO_NAME}"
          tag: latest
      - install_k8s:
          filters:
            branches:
              only: main
          requires:
            - aws-ecr/build-and-push-image
